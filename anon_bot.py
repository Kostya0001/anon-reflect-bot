# ‚ö†Ô∏è –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
WELCOME_TEXT = """
üé≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–æ–Ω–∏–º–Ω—É—é –ò–≥—Ä—É! 

–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å:
‚Äì –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞–º,  
‚Äì –ø–æ–ª—É—á–∞—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã,  
‚Äì –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ–±—è –º–∞—Å–∫–æ–π —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º.

–ù–æ –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–Ω—ë–º ‚Äì –≤–æ—Ç **–Ω–µ—Å–∫–æ–ª—å–∫–æ –ü–†–ê–í–ò–õ**: 

üö´ –ù–µ –ø—ã—Ç–∞–π—Å—è –≤—ã—á–∏—Å–ª–∏—Ç—å, –∫—Ç–æ –µ—Å—Ç—å –∫—Ç–æ.  
üö´ –ù–µ –ø–∏—à–∏ —Å–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏–º—è ‚Äì –±—É–¥—å –∫–µ–º —É–≥–æ–¥–Ω–æ, —Ö–æ—Ç—å –£—Å—Ç—Ä–∏—Ü–µ–π –ì–Ω–µ–≤–∞.  
üö´ –ù–µ —Ñ–ª—É—É–¥–∏, –Ω–µ –º–æ–ª—á–∏, –Ω–µ –≥—Ä—É–±–∏.  

–ê –≥–ª–∞–≤–Ω–æ–µ:  
‚úÖ –ò–≥—Ä–∞–π —á–µ—Å—Ç–Ω–æ, —Å–ª—É—à–∞–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏ –≤—ã–±–∏—Ä–∞–π –¥—É—à–æ–π.

–ö–æ–≥–¥–∞ –≥–æ—Ç–æ–≤ ‚Äì –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá
"""

# üìç —Ñ—É–Ω–∫—Ü–∏—è start —Ç–µ–ø–µ—Ä—å –≤—ã–≥–ª—è–¥–∏—Ç –≤–æ—Ç —Ç–∞–∫:
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    load_data()

    # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –µ—Å—Ç—å, –Ω–æ –µ—â–µ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –ø—Ä–∞–≤–∏–ª–∞
    if user_id not in participants:
        participants[user_id] = {
            "nick": None,
            "role": None,
            "answered": False,
            "wins": 0,
            "accepted_rules": False
        }
        save_data()

    if not participants[user_id].get("accepted_rules", False):
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üîì –Ø –ø–æ–Ω—è–ª", callback_data="accept_rules")]
        ])
        await update.message.reply_text(WELCOME_TEXT, reply_markup=keyboard)
    else:
        await update.message.reply_text(f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {participants[user_id]['nick']}!")

# üìç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–Ω—è–ª"
async def accept_rules_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    user_id = query.from_user.id
    await query.answer()

    participants[user_id]["accepted_rules"] = True
    save_data()

    await query.message.delete()  # —É–¥–∞–ª–∏–º –ø—Ä–∞–≤–∏–ª–∞
    await context.bot.send_message(
        chat_id=user_id,
        text="üë§ –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ê–Ω–æ–Ω–∏–º:"
    )

# üìç –≤ main() –¥–æ–±–∞–≤—å:
app.add_handler(CallbackQueryHandler(accept_rules_callback, pattern="^accept_rules$"))




















